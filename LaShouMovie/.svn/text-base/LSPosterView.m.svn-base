//
//  LSPosterView.m
//  LaShouMovie
//
//  Created by LiXiangYu on 13-9-2.
//  Copyright (c) 2013年 LiXiangYu. All rights reserved.
//

#import "LSPosterView.h"

//操作按钮的高度
#define buttonHeight 44
//操作按钮的宽度
#define buttonWidth 213
//按钮与表格的间距,基本间距
#define gap 10
//PunchScroll的收缩距离
#define edge 44

@implementation LSPosterView

@synthesize delegate=_delegate;

#pragma mark- 生命周期

- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        // Initialization code
        
        self.backgroundColor=[UIColor clearColor];
        self.clipsToBounds=YES;
        
        _punchScroll = [[PunchScrollView alloc] initWithFrame:CGRectMake(edge, 0, frame.size.width-edge*2, 304)];
        //PunchScrollView并没有重载center和bounds，这个SB控件
        //_punchScroll.center=CGPointMake(self.width/2, (self.height-buttonHeight-gap*2)/2);
        //_punchScroll.bounds=CGRectMake(0, 0, self.width, self.height-buttonHeight-gap*2);
        _punchScroll.pagePadding = gap;
        _punchScroll.edgeInsetX = edge;
        _punchScroll.clipsToBounds = NO;//此属性导致了特殊的效果
        _punchScroll.punchDelegate = self;
        _punchScroll.punchDataSource = self;
        [self addSubview:_punchScroll];
        [_punchScroll release];
        
        _button=[UIButton buttonWithType:UIButtonTypeCustom];
        _button.center=CGPointMake(self.width/2, self.height-buttonHeight/2-gap*2);
        _button.bounds=CGRectMake(0, 0, buttonWidth, buttonHeight);
        _button.backgroundColor = [UIColor clearColor];
        _button.titleLabel.font = [UIFont boldSystemFontOfSize:18.f];
        [_button setBackgroundImage:[UIImage stretchableImageWithImage:[UIImage lsImageNamed:@"film_poster_s.png"] top:15 left:11 bottom:15 right:11] forState:UIControlStateNormal];
        [_button setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        [_button setTitleEdgeInsets:UIEdgeInsetsMake(5, 0, 0, 0)];
        [_button setTitle:@"选座购票" forState:UIControlStateNormal];
        [_button addTarget:self action:@selector(buttonClick:) forControlEvents:UIControlEventTouchUpInside];
        [self addSubview:_button];
        
        
        _indicator = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 15, 3)];
        _indicator.layer.contents = (id)([UIImage lsImageNamed:@"film_poster_ind.png"].CGImage);
        [self addSubview:_indicator];
        [_indicator release];
        _indicator.top = _button.bottom+gap-_indicator.height/2;
    }
    
    return self;
}

// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect
{
    // Drawing code
    
    CGContextRef context = UIGraphicsGetCurrentContext();
    [LSRGBA(220, 220, 220, 1.0f) setStroke];
	
    CGContextSetLineWidth(context, 1.f);
	CGContextMoveToPoint(context, 0, _button.bottom+gap);
	CGContextAddLineToPoint(context, rect.size.width, _button.bottom+gap);
	CGContextDrawPath(context, kCGPathFillStroke);
}



#pragma mark- 按钮单击方法
- (void)buttonClick:(UIButton*)sender
{
    if([_delegate respondsToSelector:@selector(LSPosterView: didClickButtonAtIndex:)])
    {
        [_delegate LSPosterView:self didClickButtonAtIndex:_clickedIndex];
    }
}

#pragma mark- 复用单元格
- (LSPosterPage*)dequeueReusablePage
{
    LSPosterPage* posterPage=(LSPosterPage*)[_punchScroll dequeueRecycledPage];
    posterPage.isDequeueReusable=YES;
    return posterPage;
}

#pragma mark- 刷新
- (void)reloadData
{
    [_punchScroll reloadData];
}


#pragma mark- PunchScrollView委托方法
- (UIView*)punchScrollView:(PunchScrollView*)scrollView viewForPageAtIndexPath:(NSIndexPath *)indexPath
{
    if([_delegate respondsToSelector:@selector(LSPosterView: cellForRowAtIndexPath:)])
    {
        LSPosterPage* cell=[_delegate LSPosterView:self cellForRowAtIndexPath:indexPath];
        return cell;
    }
    else
    {
        return nil;
    }
}
- (NSInteger)punchscrollView:(PunchScrollView *)scrollView numberOfPagesInSection:(NSInteger)section
{
    if([_delegate respondsToSelector:@selector(LSPosterView: numberOfRowsInSection:)])
    {
        _filmsCount=[_delegate LSPosterView:self numberOfRowsInSection:0];
        return _filmsCount;
    }
    else
    {
        return 0;
    }
}
- (void)punchScrollView:(PunchScrollView *)scrollView pageDidSelect:(NSUInteger)pageIndex
{
    if([_delegate respondsToSelector:@selector(LSPosterView: didSelectRowAtIndexPath:)])
    {
        [_delegate LSPosterView:self didSelectRowAtIndexPath:pageIndex];
    }
}
- (void)punchScrollView:(PunchScrollView*)scrollView pageChanged:(NSIndexPath*)indexPath
{
    _clickedIndex=scrollView.currentIndexPath.row;
    if (_indicator)
    {
        CGFloat w = self.width / _filmsCount;
        CGFloat l = indexPath.row * w + w / 2 - _indicator.width / 2;
        
        [UIView animateWithDuration:.3f animations:^(){
            _indicator.left = l;
        }];
    }
}



@end
