//
//  LSViewController.m
//  LaShouMovie
//
//  Created by LiXiangYu on 13-8-29.
//  Copyright (c) 2013年 LiXiangYu. All rights reserved.
//

#import "LSViewController.h"

#import "LSDataCache.h"
#import "MobClick.h"

@interface LSViewController ()

@end

@implementation LSViewController

@synthesize isShowBackBarButton=_isShowBackBarButton;

#pragma mark- 属性方法
- (void)setIsShowBackBarButton:(BOOL)isShowBackBarButton
{
    _isShowBackBarButton=isShowBackBarButton;
    if(!_isShowBackBarButton)
    {
        self.navigationItem.leftBarButtonItem=nil;
    }
}

#pragma mark- 生命周期
- (void)dealloc
{
    [super dealloc];
}

- (id)init
{
    self=[super init];
    if(self!=nil)
    {
        _isShowBackBarButton=YES;
    }
    return self;
}

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
	// Do any additional setup after loading the view.
    self.view.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"bg.png"]];
    
    //实例化用户
    user=[LSUser currentUser];
    
    //实例化消息中心
    messageCenter=[LSMessageCenter defaultCenter];
    [messageCenter addObserver:self selector:@selector(reachabilityChanged:) name:kReachabilityChangedNotification object:nil];
    [messageCenter addObserver:self selector:@selector(internetConnection:) name:kInternetConnection object:nil];
    [messageCenter addObserver:self selector:@selector(localWiFiConnection:) name:kLocalWiFiConnection object:nil];
    
    if(_isShowBackBarButton)
    {
        //返回按钮
        UIButton* backButton = [UIButton buttonWithType:UIButtonTypeCustom];
        backButton.frame = CGRectMake(0, 0, 51, 31);
        backButton.backgroundColor = [UIColor clearColor];
        [backButton setBackgroundImage:[UIImage imageNamed:@"nav_item_back.png"] forState:UIControlStateNormal];
        [backButton setBackgroundImage:[UIImage imageNamed:@"nav_item_back_d.png"] forState:UIControlStateHighlighted];
        [backButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        backButton.titleLabel.font = [UIFont systemFontOfSize:15.f];
        [backButton setTitleEdgeInsets:UIEdgeInsetsMake(-1, 8, 0, 0)];
        [backButton setTitle:@"返回" forState:UIControlStateNormal];
        [backButton addTarget:self action:@selector(backButtonClick:) forControlEvents:UIControlEventTouchUpInside];
        
        UIBarButtonItem* backBarButtonItem=[[UIBarButtonItem alloc] initWithCustomView:backButton];
        self.navigationItem.leftBarButtonItem=backBarButtonItem;
        [backBarButtonItem release];
    }
    
    //断网提示
    _nonInternetImageView=[[UIImageView alloc] initWithImage:[UIImage lsImageNamed:@"no_wifi.png"]];
    _nonInternetImageView.frame=CGRectMake(0, 0, WidthOfiPhoneX(320), HeightOfiPhoneX(460));
    _nonInternetImageView.userInteractionEnabled=YES;
    [self.view addSubview:_nonInternetImageView];
    [_nonInternetImageView release];
    _nonInternetImageView.hidden=YES;
    
    //断网提示手势
    UITapGestureRecognizer* tapGestureRecognizer=[[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(nonInternetImageViewTap:)];
    [_nonInternetImageView addGestureRecognizer:tapGestureRecognizer];
    [tapGestureRecognizer release];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

- (void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
    [MobClick beginLogPageView:[NSString stringWithFormat:@"%s", __FILE__]];
}

- (void)viewDidDisAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
    [MobClick endLogPageView:[NSString stringWithFormat:@"%s", __FILE__]];
}


#pragma mark- 返回按钮的方法
- (void)backButtonClick:(UIButton*)sender
{
    [self.navigationController popViewControllerAnimated:YES];
}


#pragma mark- 断网提示手势方法
- (void)nonInternetImageViewTap:(UITapGestureRecognizer*)recognizer
{
    _nonInternetImageView.hidden=YES;
}



#pragma mark- 网络状态的监视方法
- (void)reachabilityChanged:(NSNotification*)notification//网络类型变化判断
{
    Reachability* reachability = notification.object;
    switch ([reachability currentReachabilityStatus])
    {
        case NotReachable:
            LSLOG(@"当前无网络连接,通知来源于:%@",notification.name);
            
            //显示提示
            _nonInternetImageView.hidden=YES;
            break;
        case ReachableViaWiFi:
            LSLOG(@"当前连接WIFI,通知来源于:%@",notification.name);
            break;
        case ReachableViaWWAN:
            LSLOG(@"当前连接3G,通知来源于:%@",notification.name);
            break;
    }
}

- (void)internetConnection:(NSNotification*)notification//网络状态变化判断
{
    Reachability* reachability = notification.object;
    switch ([reachability currentReachabilityStatus])
    {
        case NotReachable:
            LSLOG(@"当前无网络连接,通知来源于:%@",notification.name);
            
            //显示提示
            _nonInternetImageView.hidden=YES;
            [self.view bringSubviewToFront:_nonInternetImageView];
            
            break;
        case ReachableViaWiFi:
            LSLOG(@"当前连接WIFI,通知来源于:%@",notification.name);
            break;
        case ReachableViaWWAN:
            LSLOG(@"当前连接3G,通知来源于:%@",notification.name);
            break;
        default:
            LSLOG(@"当前有网络连接,通知来源于:%@",notification.name);
    }
}

- (void)localWiFiConnection:(NSNotification*)notification//WiFi状态变化判断
{
    Reachability* reachability = notification.object;
    switch ([reachability currentReachabilityStatus])
    {
        case NotReachable:
            LSLOG(@"当前无WIFI连接,通知来源于:%@",notification.name);
            
            //显示提示
            _nonInternetImageView.hidden=YES;
            [self.view bringSubviewToFront:_nonInternetImageView];
            
            break;
        default:
            LSLOG(@"当前连接WIFI,通知来源于:%@",notification.name);
            break;
        
    }
}

#pragma mark- 检查响应数据是否为空的方法
- (BOOL)checkIsNotEmpty:(id)object
{
    if(object==NULL || object==[NSNull null] || object==nil)
    {
        return NO;
    }
    return YES;
}

#pragma mark- 设置右侧按钮
- (void)setBarButtonItemWithImageName:(NSString *)imageName clickedImageName:(NSString *)clickedImageName isRight:(BOOL)isRight buttonType:(LSOtherButtonType)buttonType
{
    if (self.navigationController==nil)
        return;
    else
    {
        UIButton* button = [UIButton buttonWithType:UIButtonTypeCustom];
        button.tag=buttonType;
        button.frame = CGRectMake(0, 0, 56, 44);
        button.backgroundColor = [UIColor clearColor];
        [button setBackgroundImage:[UIImage lsImageNamed:imageName] forState:UIControlStateNormal];
        if (clickedImageName)
        {
            [button setBackgroundImage:[UIImage lsImageNamed:clickedImageName] forState:UIControlStateHighlighted];
        }
        [button addTarget:self action:@selector(otherButtonClick:) forControlEvents:UIControlEventTouchUpInside];
        
        UIBarButtonItem* barButtonItem = [[UIBarButtonItem alloc] initWithCustomView:button];
        if (isRight)
        {
            self.navigationItem.rightBarButtonItem = barButtonItem;
        }
        else
        {
            self.navigationItem.leftBarButtonItem = barButtonItem;
        }
        [barButtonItem release];
    }
}
- (void)otherButtonClick:(UIButton*)sender
{
    LSLOG(@"执行了父类otherButtonClick方法");
}

@end
